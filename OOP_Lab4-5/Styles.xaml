<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Theme Colors -->
    <Color x:Key="PrimaryBlue">#007ACC</Color>
    <Color x:Key="PrimaryBlueDark">#0060A3</Color>

    <!-- Dark Theme Colors -->
    <Color x:Key="DarkBackground">#2D2D30</Color>
    <Color x:Key="DarkerBackground">#252526</Color>
    <Color x:Key="DarkForeground">#FFFFFF</Color>
    <Color x:Key="DarkHoverBackground">#3E3E40</Color>
    <Color x:Key="LightHoverForeground">#FFFFFF</Color>

    <!-- Light Theme Colors -->
    <Color x:Key="LightBackground">#BBBBBB</Color>
    <Color x:Key="LighterBackground">#FFFFFF</Color>
    <Color x:Key="LightForeground">#333333</Color>
    <Color x:Key="LightHoverBackground">#E0E0E0</Color>

    <!-- Theme Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryBlue}"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryBlueDark}"/>

    <!-- Dark Theme Brushes -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource DarkBackground}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource DarkerBackground}"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource DarkForeground}"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="{StaticResource DarkHoverBackground}"/>
    <SolidColorBrush x:Key="PriceForegroundBrush" Color="#FFD700"/>

    <!-- Light Theme Brushes -->
    <SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource LightBackground}"/>
    <SolidColorBrush x:Key="LightSecondaryBackgroundBrush" Color="{StaticResource LighterBackground}"/>
    <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource LightForeground}"/>
    <SolidColorBrush x:Key="LightHoverBackgroundBrush" Color="{StaticResource LightHoverBackground}"/>
    <SolidColorBrush x:Key="LightPriceForegroundBrush" Color="#D4A017"/>

    <!-- Theme Switcher -->
    <Style x:Key="ThemeToggleButton" TargetType="RadioButton">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3"
                            BorderThickness="1"
                            BorderBrush="{StaticResource PrimaryBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsDarkTheme}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Theme Aware Styles -->
    <Style x:Key="ThemeAwareBackground" TargetType="Control">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDarkTheme}" Value="False">
                <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThemeAwareForeground" TargetType="Control">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDarkTheme}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Expander Style -->
    <Style TargetType="Expander" BasedOn="{StaticResource ThemeAwareForeground}">
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="IsExpanded" Value="False"/>
    </Style>

    <!-- Component List Style -->
    <Style x:Key="ComponentListStyle" TargetType="ListBox" BasedOn="{StaticResource ThemeAwareBackground}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0,2"/>
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Background="{TemplateBinding Background}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsDarkTheme}" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDarkTheme}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LightHoverBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDarkTheme}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource LightHoverBackgroundBrush}"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Component Item Template -->
    <DataTemplate x:Key="ComponentItemTemplate">
        <StackPanel Orientation="Horizontal" Margin="5">
            <StackPanel>
                <TextBlock Text="{Binding Name}" 
                           Foreground="{StaticResource ForegroundBrush}" 
                           VerticalAlignment="Center"/>
                <TextBlock Text="{Binding Price, StringFormat={}{0} BYN}" 
                           Foreground="{StaticResource PriceForegroundBrush}"
                           FontSize="12"
                           Margin="0,2,0,0"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <!-- Modern Button Style -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Component Image Style -->
    <Style x:Key="ComponentImageStyle" TargetType="Image">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <!-- Theme Resources -->
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="{StaticResource DarkBackground}"/>
    <SolidColorBrush x:Key="PanelBackgroundBrush" Color="{StaticResource DarkerBackground}"/>
    <SolidColorBrush x:Key="TextForegroundBrush" Color="{StaticResource DarkForeground}"/>

</ResourceDictionary>
